name: build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    strategy:
      max-parallel: 4
      matrix:
        include:
          - { host: x86_64, target: x86_64 }
    runs-on: ubuntu-22.04

    steps:
      # -------------------------------------------------
      # Free up space on the runner (same as original)
      # -------------------------------------------------
      - name: free space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL

      # -------------------------------------------------
      # Checkout the nwg‑panel‑void source
      # -------------------------------------------------
      - name: checkout nwg-panel-void
        uses: actions/checkout@v4
        with:
          ref: master
          path: nwg-panel-void

      # -------------------------------------------------
      # Checkout void‑packages (unchanged)
      # -------------------------------------------------
      - name: checkout void-packages
        uses: actions/checkout@v4
        with:
          repository: void-linux/void-packages
          ref: master
          path: void-packages

      # -------------------------------------------------
      # Copy the srcpkg into void‑packages
      # -------------------------------------------------
      - name: copy nwg-panel into srcpkgs
        run: |
          cp -rv nwg-panel-void/srcpkgs/nwg-panel void-packages/srcpkgs

      # -------------------------------------------------
      # Install xbps‑static (same URL as before)
      # -------------------------------------------------
      - name: prepare xbps-static
        run: |
          mkdir -p /opt/xbps
          curl -LO http://repo-default.voidlinux.org/static/xbps-static-latest.x86_64-musl.tar.xz
          tar xvf xbps-static-latest.x86_64-musl.tar.xz -C /opt/xbps
          rm xbps-static-latest.x86_64-musl.tar.xz

      # -------------------------------------------------
      # Build the package for each matrix entry
      # -------------------------------------------------
      - name: build
        env:
          XBPS_TARGET_ARCH: ${{ matrix.target }}
        run: |
          export PATH="/opt/xbps/usr/bin/:$PATH"
          cd void-packages
          if [[ "${{ matrix.host }}" == "${{ matrix.target }}" ]]; then
            ./xbps-src -A ${{ matrix.host }} binary-bootstrap
            ./xbps-src pkg -j4 -A ${{ matrix.host }} nwg-panel
          else
            ./xbps-src -a ${{ matrix.target }} -A ${{ matrix.host }} binary-bootstrap
            ./xbps-src pkg -j4 -a ${{ matrix.target }} -A ${{ matrix.host }} nwg-panel
          fi

      # -------------------------------------------------
      # Sign the resulting .xbps files
      # -------------------------------------------------
      - name: sign
        env:
          XBPS_PASSPHRASE: ${{ secrets.SIGN_PASS }}
          XBPS_TARGET_ARCH: ${{ matrix.target }}
        working-directory: void-packages/hostdir/binpkgs/
        run: |
          export PATH="/opt/xbps/usr/bin/:$PATH"
          xbps-rindex -r $PWD
          xbps-rindex -s --signedby "index-0 <index@mailbox.org>" \
            --privkey <(printf '%s' "${{ secrets.PRIV_KEY }}") $PWD
          xbps-rindex -S --privkey <(printf '%s' "${{ secrets.PRIV_KEY }}") *.xbps
          xbps-rindex -c $PWD

      # -------------------------------------------------
      # Show checksums (optional but useful)
      # -------------------------------------------------
      - name: checksum
        working-directory: void-packages/hostdir/binpkgs/
        run: |
          sha256sum $(echo *.xbps)
          sha512sum $(echo *.xbps)

      # -------------------------------------------------
      # Publish the built packages as a GitHub release
      # -------------------------------------------------
      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            void-packages/hostdir/binpkgs/*
